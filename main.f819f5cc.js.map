{"version":3,"sources":["scripts/main.js"],"names":["list","document","querySelectorAll","listOfEmployees","map","person","name","innerText","position","dataset","salary","Number","replace","age","sortList","listToSort","sort","a","b","sortListOfEmployees","getEmployees","listToFollow","i","length","toLocaleString"],"mappings":";AAAA,aA4BA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA1BA,IAAMA,EAAOC,SAASC,iBAAiB,MAEjCC,EAAkB,EAAIH,GAAMI,IAAI,SAAAC,GAAW,MAAA,CAC/CC,KAAMD,EAAOE,UACbC,SAAUH,EAAOI,QAAQD,SACzBE,OAAQC,OAAON,EAAOI,QAAQC,OAAOE,QAAQ,SAAU,KACvDC,IAAKF,OAAON,EAAOI,QAAQI,QAGvBC,EAAW,SAACC,GACTA,OAAAA,EAAWC,KAAK,SAACC,EAAGC,GAAMA,OAAAA,EAAER,OAASO,EAAEP,UAG1CS,EAAsBL,EAASX,GAE/BiB,EAAe,SAACC,GACf,IAAA,IAAIC,EAAI,EAAGA,EAAID,EAAaE,OAAQD,IACvCtB,EAAKsB,GAAGf,UAAYc,EAAaC,GAAGhB,KACpCN,EAAKsB,GAAGb,QAAQD,SAAWa,EAAaC,GAAGd,SAE3CR,EAAKsB,GAAGb,QAAQC,OACRW,IAAAA,OAAAA,EAAaC,GAAGZ,OAAOc,eAAe,UAC9CxB,EAAKsB,GAAGb,QAAQI,IAAMM,EAAoBG,GAAGT,KAIjDO,EAAaD","file":"main.f819f5cc.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst list = document.querySelectorAll('li');\r\n\r\nconst listOfEmployees = [...list].map(person => ({\r\n  name: person.innerText,\r\n  position: person.dataset.position,\r\n  salary: Number(person.dataset.salary.replace(/[, $]/g, '')),\r\n  age: Number(person.dataset.age),\r\n}));\r\n\r\nconst sortList = (listToSort) => {\r\n  return listToSort.sort((a, b) => b.salary - a.salary);\r\n};\r\n\r\nconst sortListOfEmployees = sortList(listOfEmployees);\r\n\r\nconst getEmployees = (listToFollow) => {\r\n  for (let i = 0; i < listToFollow.length; i++) {\r\n    list[i].innerText = listToFollow[i].name;\r\n    list[i].dataset.position = listToFollow[i].position;\r\n\r\n    list[i].dataset.salary\r\n      = `$${listToFollow[i].salary.toLocaleString('en-US')}`;\r\n    list[i].dataset.age = sortListOfEmployees[i].age;\r\n  };\r\n};\r\n\r\ngetEmployees(sortListOfEmployees);\r\n"]}